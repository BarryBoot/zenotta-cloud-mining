apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "miner.fullname" . }}
  labels:
    {{- include "miner.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "miner.selectorLabels" . | nindent 6 }}
  serviceName: "nginx"
  replicas: {{ (.Values.miner).replicaCount }}
  template:
    metadata:
      labels:
        {{- include "miner.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ include "miner.fullname" . }}
        image: "{{ (.Values.miner).image.repository }}:{{ .Values.miner.image.tag }}"
        command: 
            - "/zenotta/target/release/node"
            - "miner"
            - "--config=/etc/node_settings.toml"
            - "--tls_config=/etc/tls_certificates.json"
            - "--initial_block_config=/etc/initial_block.json"
            - "--api_config=/etc/api_config.json"
            - "--api_use_tls=0"
            - "--with_user_address={{ (.Values.miner).user_address }}:{{ (.Values.miner).user_port }}"
            - "--address={{ (.Values.miner).address }}:{{ (.Values.miner).port }}"
            - "--mining_api_key={{ (.Values.miner).api_key }}"
        ports:
          - containerPort: 3000
            name: http-api
        resources:
            limits:
              memory: {{ (.Values.miner).limits.memory }}
              cpu: {{ (.Values.miner).limits.cpu }}
              nvidia.com/gpu: 1
            requests:
              memory: {{ (.Values.miner).requests.memory }}
              cpu: {{ (.Values.miner).requests.cpu }}
              nvidia.com/gpu: 1
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: {{ include "miner.fullname" . }}-configmap
          - secretRef:
              name: {{ include "miner.fullname" . }}-secret
        volumeMounts:
        - name: {{ include "miner.fullname" . }}-pvc
          mountPath: /zenotta/src/wallet
  volumeClaimTemplates:
  - metadata:
      name: {{ include "miner.fullname" . }}-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
